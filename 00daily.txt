https://baactree.tistory.com/52
https://plzrun.tistory.com/entry/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EB%AC%B8%EC%A0%9C%ED%92%80%EC%9D%B4PS-%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0
https://rkm0959.tistory.com/
https://velog.io/@city7310/%EB%82%B4%EA%B0%80-%EA%B3%B5%EB%B6%80%ED%95%98%EB%8A%94-%EB%B0%A9%EC%8B%9D

알고리즘
http://blog.naver.com/PostView.nhn?blogId=kks227&logNo=220907708368&categoryNo=299&parentCategoryNo=0&viewDate=&currentPage=5&postListTopCurrentPage=&from=postList&userTopListOpen=true&userTopListCount=5&userTopListManageOpen=false&userTopListCurrentPage=5

추가할 내용
offline query
mo's algorithm
sqrt decomposition
randomization

노란 책
https://book.naver.com/bookdb/book_detail.nhn?bid=6750543)(절판인듯)

책(네트워크 기본개념)
	- 아마존 웹 서비스
	- 하루 3분 네트워크 교실

인강(spring boot, maven, git, SQL)
	- HTML, CSS, JavaScript, JSON, SQL
		- http://www.tcpschool.com/
		- https://developer.mozilla.org/en-US/docs/Learn/HTML/Introduction_to_HTML/Getting_started
---------------------------------------------알게된 것
scanf 인자에 정규식 들어갈 수 있음, 공부하기

binary search와 탐색 원리는 같은데 정확한 값을 찾는게 중요한게 아닌(존재 여부 등), 최적화시켜야하는(특정 값에 가장 가깝거나 기준 만족하는 것중 가장 큰 것 등등) 문제에 대해 parametric search 적용하는듯, 해가 반드시 존재하는 범위에 대해 적용.

블로그 https://codemcd.github.io/algorithm/DataStructure-DFS%EC%99%80-%EC%82%AC%EC%9D%B4%ED%81%B4/

brute-force 구현할 때 dfs가 간단히 구현가능하지만 스택 터질 우려가 있음
bfs, visited 사용하면 시간 줄일 수 있고 스택 우려 x

meet in the middle
반으로 나눠서 탐색 후 잘 합쳐서 시간복잡도 줄이는 테크닉(보통 brute-force로 푸는데 크기가 너무 클 때 사용)

hashing
http://sweeper.egloos.com/925740#comment_925740

1324
https://github.com/kks227/BOJ/blob/master/1300/1324.cpp#L2
https://blog.naver.com/kks227
